[{"F:\\My Web Project 3\\Movie Search\\movie-searcher\\src\\index.js":"1","F:\\My Web Project 3\\Movie Search\\movie-searcher\\src\\App.js":"2","F:\\My Web Project 3\\Movie Search\\movie-searcher\\src\\reportWebVitals.js":"3","F:\\My Web Project 3\\Movie Search\\movie-searcher\\src\\components\\MainComponent.js":"4","F:\\My Web Project 3\\Movie Search\\movie-searcher\\src\\components\\RouteComponent.js":"5","F:\\My Web Project 3\\Movie Search\\movie-searcher\\src\\components\\WrapperComponent.js":"6","F:\\My Web Project 3\\Movie Search\\movie-searcher\\src\\components\\WishListComponent.js":"7","F:\\My Web Project 3\\Movie Search\\movie-searcher\\src\\components\\MoreInfoComponent.js":"8","F:\\My Web Project 3\\Movie Search\\movie-searcher\\src\\components\\NavComponent.js":"9","F:\\My Web Project 3\\Movie Search\\movie-searcher\\src\\components\\MovieContainer.js":"10","F:\\My Web Project 3\\Movie Search\\movie-searcher\\src\\components\\MovieList.js":"11"},{"size":436,"mtime":1610549310857,"results":"12","hashOfConfig":"13"},{"size":245,"mtime":1610917201279,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"13"},{"size":287,"mtime":1610571744182,"results":"16","hashOfConfig":"13"},{"size":651,"mtime":1610885295739,"results":"17","hashOfConfig":"13"},{"size":638,"mtime":1610738697851,"results":"18","hashOfConfig":"13"},{"size":4701,"mtime":1610896802865,"results":"19","hashOfConfig":"13"},{"size":13498,"mtime":1610920331082,"results":"20","hashOfConfig":"13"},{"size":7980,"mtime":1610918512786,"results":"21","hashOfConfig":"13"},{"size":303,"mtime":1610235390462,"results":"22","hashOfConfig":"13"},{"size":4868,"mtime":1610920301120,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1rjopzj",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},"F:\\My Web Project 3\\Movie Search\\movie-searcher\\src\\index.js",[],["51","52"],"F:\\My Web Project 3\\Movie Search\\movie-searcher\\src\\App.js",[],"F:\\My Web Project 3\\Movie Search\\movie-searcher\\src\\reportWebVitals.js",[],"F:\\My Web Project 3\\Movie Search\\movie-searcher\\src\\components\\MainComponent.js",[],"F:\\My Web Project 3\\Movie Search\\movie-searcher\\src\\components\\RouteComponent.js",[],"F:\\My Web Project 3\\Movie Search\\movie-searcher\\src\\components\\WrapperComponent.js",[],"F:\\My Web Project 3\\Movie Search\\movie-searcher\\src\\components\\WishListComponent.js",["53"],"import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport './Components.css';\r\nimport Tippy from '@tippyjs/react';\r\nimport 'tippy.js/themes/translucent.css';\r\nimport 'tippy.js/dist/tippy.css';\r\nimport cantfindimg from '../images/binocular-2.svg';\r\n\r\nfunction WishList() {\r\n    const [placement, setPlacement] = useState(\"right\");\r\n    const history = useHistory();\r\n    let bookmarkedData;\r\n    let wdata = localStorage.getItem(\"wishlist_data\") ? JSON.parse(localStorage.getItem(\"wishlist_data\")) : \"whatsup\";\r\n\r\n    let media = window.matchMedia(\"(max-width: 770px)\");\r\n    useEffect(() => {\r\n        if(media.matches) {\r\n          setPlacement(\"top\");\r\n        }\r\n    }, [media])\r\n\r\n    function deleteData(d) {\r\n        let currentData = JSON.parse(localStorage.getItem(\"wishlist_data\"));\r\n        for(let i = 0; i < currentData.length; i++) {\r\n            if(currentData[i].imdbID === d) {\r\n                currentData.splice(currentData.indexOf(currentData[i]), 1);\r\n                localStorage.setItem(\"wishlist_data\", JSON.stringify(currentData));\r\n                history.push(\"/wishlist\");\r\n            }\r\n        }\r\n    }\r\n    \r\n    if(localStorage.getItem(\"wishlist_data\")) {\r\n        bookmarkedData = JSON.parse(localStorage.getItem(\"wishlist_data\")).map((data) => {\r\n            return (\r\n                <div key={data.imdbID} className=\"row mb-1\">\r\n                    <div className=\"media pl-2 py-2 w-100 media-row\" style={{background: \"#222223\", border: \"none\", borderBottom: \"1.5px solid #1e1e1e\"}}>\r\n                        <img src={data.poster} className=\"img-fluid rounded\" style={{width: \"100px\", height: \"100px\"}} />\r\n                        <div className=\"media-body dFlex\" style={{height: \"100%\"}}>\r\n                            <div className=\"col-8 h-100 px-0\" onClick={() => history.push(`/id/${data.imdbID}`)}>\r\n                                <div className=\"col-12 pl-4\">\r\n                                    <Tippy content={data.title} theme=\"translucent\" placement={placement} interactiveBorder={20} className=\"fmont-0-8\">\r\n                                        <span className=\"fmont-1-1 mt-2 torange-light\">{data.title.length >= 19 ? data.title.replace(data.title.substring(16, data.title.length), \"...\") : data.title}</span>\r\n                                    </Tippy>\r\n                                </div>\r\n                                <div className=\"col-12 pl-4\">\r\n                                    <span className=\"text-white fmont-1-1 wishlist-plot\">{data.plot}</span>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-4 h-100 px-0 mx-0 d-flex delete-btn align-items-center justify-content-center flex-column flex-md-row\">\r\n                                <div className=\"col-12 col-md-4 b-notification dFlex\">\r\n                                    <Tippy theme=\"translucent\" interactiveBorder={30} content=\"Added To WishList\">\r\n                                        <i className=\"fas fa-bookmark text-primary\"></i>\r\n                                    </Tippy>\r\n                                </div>\r\n                                <div className=\"col-12 col-md-8 d-flex delete-btn dFlex\">\r\n                                    <button className=\"btn btn-outline-warning\" onClick={() => deleteData(data.imdbID)}>Delete</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n    if(wdata.length === 0 || !localStorage.getItem(\"wishlist_data\")) {\r\n        bookmarkedData = (\r\n            <div className=\"row dFlexColSpaced mx-auto mt-5 text-center empty-container\" style={{background: \"#383838\", height: \"50vh\", width: \"50%\", borderRadius: \"10px\", boxShadow: \"10px 10px 10px #1c1c1c\"}}>\r\n                <img src={cantfindimg} width=\"150\" height=\"150\" alt=\"can't find wishlist data\" />\r\n                <span className=\"fmont-1-1 torange\">Nothing saved to your wishlist yet</span>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    let wishlistHeading = (\r\n        <div className=\"row\" style={{height: \"50px\"}}>\r\n            <div className=\"col-12 dFlex justify-content-start\">\r\n                <h4 className=\"fpoppins-1-2 text-white mt-2\">My WishList</h4>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    return (\r\n        <div className=\"container-fluid\" style={{background: \"#2b2b2b\", minHeight: \"91.5vh\", height: \"auto\", paddingBottom: \"10px\"}}>\r\n            {wishlistHeading}\r\n            <div>{bookmarkedData}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default WishList;","F:\\My Web Project 3\\Movie Search\\movie-searcher\\src\\components\\MoreInfoComponent.js",["54","55","56","57","58"],"import React, { useState, useEffect } from 'react';\r\nimport './Components.css';\r\nimport defaultimg from '../images/notfound-sm-v.svg';\r\nimport Tippy from '@tippyjs/react';\r\nimport 'tippy.js/themes/translucent.css';\r\nimport 'tippy.js/dist/tippy.css';\r\n\r\nfunction MoreInfo({ match }) {\r\n    const [thisMovie, setMData] = useState(null);\r\n    const [bookmarkclick, setClicked] = useState(false);\r\n    const [bookmarkcheck, setBookmarkCheck] = useState(0);\r\n    const [tippyText, setTippyText] = useState(\"Add To WishList\");\r\n    const [bookmarkstate, setBookmarkState] = useState(\"far fa-bookmark mr-3 text-white\");\r\n    var movieArr = [];\r\n\r\n    class MovieList {\r\n        constructor(poster, imdbID, title, plot) {\r\n            this.poster = poster;\r\n            this.imdbID = imdbID;\r\n            this.title = title;\r\n            this.plot = plot;\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        let url = `https://www.omdbapi.com/?apikey=${process.env.REACT_APP_OMDB_API_KEY}&i=${match.params.id}`;\r\n        let xml = new XMLHttpRequest();\r\n        xml.open(\"GET\", url, true);\r\n        xml.onload = () => {\r\n            fetchMovieData(xml.response);\r\n        }\r\n        xml.send();\r\n\r\n        return () => xml.abort();\r\n    }, [match.params.id])\r\n\r\n    function fetchMovieData(data) {\r\n        setMData(data);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(localStorage.getItem(\"wishlist_data\")) {\r\n            let data = JSON.parse(localStorage.getItem(\"wishlist_data\"));\r\n            data.forEach((d) => {\r\n                movieArr.push(d);\r\n            })\r\n            localStorage.setItem(\"wishlist_data\", JSON.stringify(movieArr));\r\n        }\r\n        if(bookmarkcheck % 2 !== 0) {\r\n            let storageObject = new MovieList(tMovie.Poster, tMovie.imdbID, tMovie.Title, tMovie.Plot.replace(tMovie.Plot.substring(28, tMovie.Plot.length), \"...\"));\r\n            movieArr.push(storageObject);\r\n            setMovieData();\r\n            setBookmarkState(\"fas fa-bookmark mr-3 text-primary\");\r\n        }\r\n        if(bookmarkcheck % 2 === 0 && movieArr.length > 0 && thisMovie !== null && !bookmarkclick) {\r\n            movieArr.pop();\r\n            setMovieData();\r\n            setBookmarkState(\"far fa-bookmark mr-3 text-white\");\r\n            setTippyText(\"Add To WishList\");\r\n        }\r\n    }, [bookmarkcheck])\r\n\r\n    useEffect(() => {\r\n        if(movieArr.length > 0) {\r\n            for(let i = 0; i < movieArr.length; i++) {\r\n                if(movieArr[i].imdbID.match(match.params.id) !== null) {\r\n                    setBookmarkState(\"fas fa-bookmark mr-3 text-primary\");\r\n                    setTippyText(\"Added To WishList\");\r\n                    break;\r\n                }\r\n                else if(movieArr[i].imdbID.match(match.params.id) === null) {\r\n                    setBookmarkState(\"far fa-bookmark mr-3 text-white\");\r\n                    setTippyText(\"Add To WishList\");\r\n                    continue;\r\n                }\r\n            }\r\n        }\r\n    }, [match.params.id])\r\n\r\n    useEffect(() => {\r\n        if(movieArr.length > 0 && bookmarkclick) {\r\n            for(let i = 0; i < movieArr.length; i++) {\r\n                for(let j = 0; j < movieArr.length; j++) {\r\n                    if(i !== j) {\r\n                        if(movieArr[i].imdbID === movieArr[j].imdbID) {\r\n                            movieArr.splice(movieArr.indexOf(movieArr[i]), 1);\r\n                            setMovieData();\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        \r\n    }, [bookmarkclick, movieArr])\r\n    \r\n    let tMovie = JSON.parse(thisMovie);\r\n    let myMovie;\r\n    let movieInfo;\r\n\r\n    function setMovieData() {\r\n        localStorage.setItem(\"wishlist_data\", JSON.stringify(movieArr));\r\n    }\r\n\r\n    function bookmarkMovie() {\r\n        setClicked(!bookmarkclick);\r\n        setBookmarkCheck(bookmarkcheck+1);\r\n    }\r\n\r\n    if(thisMovie !== null) {\r\n        myMovie =  (\r\n                <>\r\n                    <div className=\"card bg-transparent dFlex movie-card-show\" style={{height: \"80%\", border: \"none\"}}>\r\n                        <img src={tMovie.Poster !== \"N/A\" ? tMovie.Poster : defaultimg} className=\"img-fluid card-img mt-2 card-img-show\" alt=\"Movie Poster Image\" />\r\n                        <div className=\"card-body pl-0 pb-0\">\r\n                            <span className=\"card-title fpoppins-1\" style={{color: \"#f0f5f1\"}}>{tMovie.Title}</span>\r\n                        </div>\r\n                    <div className=\"pt-5 w-100 dFlexSpaced-b\">\r\n                        <button className=\"btn btn-outline-warning mb-2\" onClick={() => window.history.back()}><i className=\"fa fa-arrow-left pr-2\"></i>Go Back</button>\r\n                        <Tippy content={tippyText} interactiveBorder={30} theme=\"translucent\" placement=\"top\" className={bookmarkclick ? \"d-none\" : \"mr-3\"}>\r\n                            <Tippy content={bookmarkclick ? \"Added To WishList\" : null} interactiveBorder={30} theme=\"translucent\" trigger=\"click\" className={bookmarkclick ? \"mr-3\" : \"d-none\"} >\r\n                                <span type=\"button\" id=\"bookmark\" onClick={bookmarkMovie}><i className={bookmarkstate}></i></span>\r\n                            </Tippy>\r\n                        </Tippy>\r\n                    </div>\r\n                    </div>\r\n                </>\r\n        );\r\n\r\n        let movieEpisodes = (\r\n            <>\r\n                <div className=\"content-design dFlex justify-content-start\">\r\n                    <span className=\"tgrey pl-3 pr-3\">Seasons</span>\r\n                </div>\r\n                <div className=\"dFlex justify-content-start\">\r\n                    <span className=\"torange-light pl-3 pr-3 fmont-0-9\">{tMovie.totalSeasons}</span>\r\n                </div>\r\n            </>\r\n        );\r\n\r\n        movieInfo = (\r\n                <div className='movie-details dFlexColSpaced'>\r\n                        <div className=\"more-info plot\" style={{overflow: \"auto\"}}>\r\n                            <div className=\"col-12 px-0\" style={{cursor: \"pointer\"}}>\r\n                                <span data-target=\"#plot\" data-toggle=\"collapse\" className=\"d-flex card-header align-items-center justify-content-between\">\r\n                                    <span className=\"text-white float-left fmont-1-2\">Plot</span>\r\n                                    <span className=\"open-btn dFlex\"><i className=\"fa fa-arrow-down float-right text-white\"></i></span>\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"col-12 p-0\">\r\n                                <div id=\"plot\" className=\"card bg-transparent collapse\" style={{border: \"none\"}}>\r\n                                    <div className=\"card-body py-2\">\r\n                                        <span className=\"text-white fmont-1\">{tMovie.Plot}</span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"more-info genre\" style={{overflow: \"auto\"}}>\r\n                            <div className=\"col-12 dFlex justify-content-start w-100 h-100\">\r\n                                <div className=\"content-design dFlex justify-content-start\">\r\n                                    <span className=\"text-white pl-2 pr-3 fmont-1-1\">Genre</span>\r\n                                </div>\r\n                                <div className=\"genre-info pl-3 w-100 h-100 dFlex justify-content-start\">\r\n                                    <span className=\"torange-light fmont-0-9\">{tMovie.Genre}</span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"more-info rating\">\r\n                            <div className=\"col-12 dFlex justify-content-start w-100 h-100\">\r\n                                <div className=\"content-design dFlex justify-content-start\">\r\n                                    <span className=\"text-white pl-2 pr-3 fmont-1-1\">Rating</span>\r\n                                </div>\r\n                                <div className=\"genre-info pl-3 w-100 h-100 dFlex justify-content-start\">\r\n                                    <span className=\"torange-light fmont-0-9\">{tMovie.imdbRating} / 10</span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"more-info actors\" style={{overflow: \"auto\"}}>\r\n                            <div className=\"col-12 px-0\" style={{cursor: \"pointer\"}}>\r\n                                <span data-target=\"#actors\" data-toggle=\"collapse\" className=\"d-flex card-header align-items-center justify-content-between\">\r\n                                    <span className=\"text-white float-left fmont-1-2\">Actors</span>\r\n                                    <span className=\"open-btn dFlex\"><i className=\"fa fa-arrow-down float-right text-white\"></i></span>\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"col-12 p-0\">\r\n                                <div id=\"actors\" className=\"card bg-transparent collapse\" style={{border: \"none\"}}>\r\n                                    <div className=\"card-body pt-2\">\r\n                                        <span className=\"text-white fmont-1\">{tMovie.Actors}</span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"more-info language\">\r\n                            <div className=\"col-12 dFlex justify-content-start w-100 h-100\">\r\n                                <div className=\"content-design dFlex justify-content-start\">\r\n                                    <span className=\"text-white pl-2 pr-3 fmont-1-1\">Language</span>\r\n                                </div>\r\n                                <div className=\"genre-info pl-3 w-100 h-100 dFlex justify-content-start\">\r\n                                    <span className=\"torange-light fmont-0-9\">{tMovie.Language}</span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"more-info type\">\r\n                            <div className=\"col-12 dFlex justify-content-start w-100 h-100\">\r\n                                <div className=\"content-design dFlex justify-content-start\">\r\n                                    <span className=\"text-white pl-2 pr-3 fmont-1-1\">Type</span>\r\n                                </div>\r\n                                <div className=\"genre-info pl-3 w-100 h-100 dFlex justify-content-start\">\r\n                                    <div className=\"content-design dFlex justify-content-start\">\r\n                                        <span className=\"torange-light pl-2 pr-3 fmont-0-9\">{tMovie.Type}</span>\r\n                                    </div>\r\n                                    <div className=\"content-design dFlex justify-content-start\">\r\n                                        <span className=\"tgrey pl-3 pr-3\">Runtime</span>\r\n                                    </div>\r\n                                    <div className=\"content-design dFlex justify-content-start\">\r\n                                        <span className=\"torange-light pl-3 pr-3 fmont-0-9\">{tMovie.Runtime}</span>\r\n                                    </div>\r\n                                    {tMovie.Type === \"series\" ? movieEpisodes : null}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"more-info year\">\r\n                            <div className=\"col-12 dFlex justify-content-start w-100 h-100\">\r\n                                <div className=\"content-design dFlex justify-content-start\">\r\n                                    <span className=\"text-white pl-2 pr-3 fmont-1-1\">Realsed</span>\r\n                                </div>\r\n                                <div className=\"genre-info pl-3 w-100 h-100 dFlex justify-content-start\">\r\n                                    <span className=\"torange-light fmont-0-9\">{tMovie.Released}</span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"container-fluid\" style={{background: \"#4a4949\", height: \"91.5vh\"}}>\r\n            <div className=\"row\" style={{height: \"100%\"}}>\r\n                <div className=\"col-12 col-xl-4 dFlex\" style={{height: \"100%\", overflow: \"auto\"}}>\r\n                    {myMovie}\r\n                </div>\r\n                <div className=\"col-12 col-xl-8 dFlexCol\" style={{background: \"#3a3838\", height: \"100%\"}}>\r\n                    {movieInfo}\r\n                    <div className=\"container\">\r\n                        {thisMovie !== null ? <a href={`https://www1.cmovies.ac/movie/search/${tMovie.Title.replace(/\\s+/g, \"-\").replace(/[:+|?|,+]/g, \"\").toLowerCase()}`} target=\"_blank\" rel=\"noopener\" className=\"btn btn-outline-warning float-right mt-4\" style={{paddingLeft: \"40px\", paddingRight: \"40px\"}}><i className=\"fa fa-play pr-2\"></i>Watch {tMovie.Type}</a> : null}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MoreInfo;","F:\\My Web Project 3\\Movie Search\\movie-searcher\\src\\components\\NavComponent.js",["59","60","61","62","63"],"import React, { useState, useEffect } from 'react';\r\nimport './Components.css';\r\nimport homeimg from '../images/homeImage.jpeg';\r\nimport movielogo from '../images/movie-app-logo.svg';\r\nimport { NavLink, useHistory } from 'react-router-dom';\r\nimport Tippy from '@tippyjs/react';\r\nimport 'tippy.js/themes/translucent.css';\r\nimport 'tippy.js/dist/tippy.css';\r\n\r\nfunction Nav() {\r\n    const [transform, setState] = useState(false);\r\n    const [navstate, setNavState] = useState(false);\r\n    const searchHistory = useHistory(); \r\n\r\n    useEffect(() => {\r\n        if(window.location.pathname === \"/\") {\r\n            setState(true);\r\n        }\r\n        else if(window.location.pathname !== \"/\") {\r\n            setState(false);\r\n        }\r\n    })\r\n    \r\n    function search(e) {\r\n        let searchInput = document.querySelector(\"#searchInput\").value;\r\n\r\n        if(e.keyCode === 13) {\r\n            setState(false);\r\n            searchHistory.push(`/search/${searchInput.replace(/\\s+/g, \"-\").toLowerCase()}`);\r\n        }\r\n    }\r\n    function smallSearch(e) {\r\n        let searchInput = document.querySelector(\"#smallSearchInput\").value;\r\n\r\n        if(e.keyCode === 13) {\r\n            setState(false);\r\n            searchHistory.push(`/search/${searchInput.replace(/\\s+/g, \"-\").toLowerCase()}`);\r\n        }\r\n    }\r\n    \r\n        return (\r\n            <>\r\n                <nav className={transform ? \"navbar navbar-dark bg-dark fixed-top h-100 navbar-expand-sm\" : \"navbar navbar-dark bg-dark sticky-top navbar-expand-sm d-none d-lg-flex\"} style={transform ? {background: `url(${homeimg})`} : {transition: \"height 10s ease !important\"}} id=\"navbar\">\r\n                    <div className={transform ? \"container-fluid fixed-top mt-2\" : \"d-none\"}>\r\n                       <img src={movielogo} height=\"40\" width=\"40\" className=\"navbar-brand mr-auto\"/>\r\n                       <div className=\"ml-auto d-flex align-items-center justify-content-center\">\r\n                               <button className=\"btn\">\r\n                                    <span className=\"far fa-bookmark mr-2 text-white\"></span>\r\n                                    <span className=\"d-none d-lg-inline text-white\">Wish List</span>\r\n                               </button>\r\n                        </div>\r\n                    </div>\r\n                    <NavLink to=\"/\" >\r\n                        <div className=\"dFlex\" style={{height: \"40px\", width: \"150px\"}}>\r\n                            <img src={movielogo} height=\"40\" width=\"40\" className={transform ? \"navbar-brand mr-auto d-none\" : \"navbar-brand\"}/>\r\n                            <span className={transform ? \"d-none\" : \"text-white fmont-1 d-none d-md-inline\"}>Searcher</span>\r\n                        </div>\r\n                        </NavLink>\r\n                    <div className=\"container mr-0 pr-0\">\r\n                         <div className=\"row-fluid d-flex justify-content-center w-100\">\r\n                            <div className=\"col-10\">\r\n                                <div className=\"input-group\">\r\n                                    <div className=\"input-group-prepend\">\r\n                                        <div className=\"input-group-text\" style={transform ? {background: \"white\", border: \"none\"} : {background: \"#FFAE00\", border: \"none\"}}>\r\n                                            <span className={transform ? \"fa fa-search\" : \"fa fa-search text-white\"}></span>\r\n                                        </div>\r\n                                    </div>\r\n                                    <input type=\"text\" id=\"searchInput\" className={transform ? \"form-control pl-0 shadow-none\" : \"form-control\"} onKeyDown={search} style={transform ? {height: \"60px\", border: \"none\"} : {border: \"none\"}}\r\n                                     spellCheck=\"false\" autoComplete=\"off\" placeholder=\"Search A Movie\"/>\r\n                                </div>\r\n                            </div>\r\n                            <div className={transform ? \"col d-none d-sm-flex align-items-center justify-content-center\" : \"col-2 d-flex align-items-center justify-content-center\"}>\r\n                               <button className={transform ? \"btn d-none\" : \"btn\"} >\r\n                                    <span className=\"far fa-bookmark mr-2 text-white\"></span>\r\n                                    <NavLink to=\"/wishlist\" className=\"t-decoration-none\"><span className=\"d-none d-lg-inline text-white\">Wish List</span></NavLink>\r\n                               </button>\r\n                            </div>\r\n                         </div>\r\n                    </div>\r\n                </nav>\r\n                <nav className={navstate ? \"navbar navbar-dark bg-dark sticky-top d-none\" : \"navbar navbar-dark bg-dark sticky-top d-flex d-lg-none\"}>\r\n                    <div className=\"container-fluid\">\r\n                            <div className=\"col-2 dFlex\">\r\n                                <NavLink to=\"/\"><img src={movielogo} width=\"40\" height=\"40\" className=\"navbar-brand\"/></NavLink>\r\n                                <span className=\"text-white fmont-1 d-none d-md-inline\">Searcher</span>\r\n                            </div>\r\n                            <div className=\"col-10\">\r\n                                <div className=\"row dFlex justify-content-end\">\r\n                                    <div className=\"col-12 dFlex justify-content-end p-0\">\r\n                                        <Tippy content=\"Search\" theme=\"translucent\" interactiveBorder={10} placement=\"bottom\">\r\n                                            <span className=\"nav-link t-decoration-none\" style={{cursor: \"pointer\"}}><span className=\"fa fa-search text-white\" onClick={() => setNavState(true)}></span></span>\r\n                                        </Tippy>\r\n                                        <NavLink to=\"/wishlist\">\r\n                                            <Tippy content=\"WishList\" theme=\"translucent\" interactiveBorder={10} placement=\"bottom\">\r\n                                                <span className=\"nav-link t-decoration-none\"><span className=\"fa fa-bookmark text-white\"></span></span>\r\n                                            </Tippy>\r\n                                        </NavLink>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                    </div>\r\n                </nav>\r\n                <nav className={navstate ? \"navbar navbar-dark bg-dark sticky-top d-flex d-lg-none\" : \"navbar navbar-dark bg-dark sticky-top d-none\"}>\r\n                    <div className=\"container-fluid p-0\">\r\n                        <div className=\"col-1 dFlex\">\r\n                            <NavLink to=\"/\"><img src={movielogo} width=\"40\" height=\"40\" className=\"navbar-brand\"/></NavLink>\r\n                        </div>\r\n                        <div className=\"col-10 dFlex\">\r\n                            <div className=\"input-group\">\r\n                                <div className=\"input-group-prepend\">\r\n                                    <div className=\"input-group-text\" style={{background: \"#FFAE00\", border: \"none\"}}>\r\n                                        <span className=\"fa fa-search text-white\"></span>\r\n                                    </div>\r\n                                </div>\r\n                                <input type=\"text\" id=\"smallSearchInput\" className=\"form-control\" onKeyDown={smallSearch} style={{border: \"none\"}}\r\n                                    spellCheck=\"false\" autoComplete=\"off\" placeholder=\"Search A Movie\"/>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-1 ml-auto\">\r\n                                <span className=\"fas fa-window-close torange menu-close-icon\" onClick={() => setNavState(false)} style={{cursor: \"pointer\"}}></span>\r\n                        </div>\r\n                    </div>\r\n                </nav>\r\n            </>\r\n        );\r\n}\r\n\r\nexport default Nav;","F:\\My Web Project 3\\Movie Search\\movie-searcher\\src\\components\\MovieContainer.js",[],"F:\\My Web Project 3\\Movie Search\\movie-searcher\\src\\components\\MovieList.js",["64","65","66","67"],"import React, { useState, useEffect, Suspense } from 'react';\r\nimport defaultimg from '../images/notfound.svg';\r\nimport binocular from '../images/binocular.svg';\r\nimport './Components.css';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nfunction MovieList(props) {\r\n    const [movieData, setMovieData] = useState(null);\r\n    const [pageCount, setPageCount] = useState(1);\r\n\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        let url = `https://www.omdbapi.com/?apikey=${process.env.REACT_APP_OMDB_API_KEY}&s=${props.searchValue.replace(/-+/g, \" \")}&page=${pageCount}`;\r\n        let xml = new XMLHttpRequest();\r\n        xml.open(\"GET\", url, true);\r\n        xml.onload = () => {\r\n            fetchData(xml.response);\r\n        }\r\n        xml.send();\r\n        \r\n        if(!sessionStorage.pathname) {\r\n            sessionStorage.setItem(\"pathname\", JSON.stringify(`/search/${props.searchValue}`));\r\n        }\r\n        \r\n        if(sessionStorage.pathname) {\r\n            let previousPathname = JSON.parse(sessionStorage.getItem(\"pathname\"));\r\n            if(window.location.pathname !== previousPathname) {\r\n                setPageCount(1);\r\n                sessionStorage.setItem(\"pathname\", JSON.stringify(`/search/${props.searchValue}`));\r\n            }\r\n        }\r\n        return () => xml.abort();\r\n    })\r\n\r\n    function fetchData(data) {\r\n        setMovieData(data);\r\n    }\r\n\r\n    let movie_D = JSON.parse(movieData);\r\n    let movies;\r\n    let pageBtns;\r\n    let count = 0;\r\n    if(movieData !== null) {\r\n        if(movie_D.Response === \"True\") {\r\n        movies = movie_D.Search.map((movie) => {\r\n                return (\r\n                    <div key={movie.imdbID} className=\"card movie-card\" onClick={() => history.push(`/id/${movie.imdbID}`)} style={movie_D.Search.length < 10 ? {height: \"auto\"} : {height: \"22.5%\"}}>\r\n                        <img src={movie.Poster === \"N/A\" ? defaultimg : movie.Poster} alt={`Movie: ${movie.Title}`} style={{width: \"100%\", height: \"80%\"}} className=\"img-fluid card-img-top\" />\r\n                        <div className=\"card-img-overlay\">\r\n                            <i className=\"fas fa-angle-double-right text-white h1\"></i><br/><br/>\r\n                            <span className=\"text-white d-none d-sm-flex fpoppins-1\">Click to get more details<br/>on<br/>{movie.Title}</span>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            <div className=\"col-12 px-0\">\r\n                                <h6 className=\"card-title text-white\">{movie.Title.length > 18 ? movie.Title.replace(movie.Title.substring(18, movie.Title.length), \"...\") : movie.Title}</h6>\r\n                            </div>\r\n                            <div className=\"card-text bg-primary d-none d-sm-block card-details-text\">\r\n                                <span className=\"text-muted float-left\">{movie.Type}</span>\r\n                                <span className=\"text-muted float-right\">{movie.Year}</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                );  \r\n            }\r\n        );\r\n        pageBtns = (\r\n                <div className=\"col-12 dFlex justify-content-between\">\r\n                    {pageCount > 1 ? <button className=\"btn btn-outline-warning\" onClick={() => setPageCount(pageCount-1)}><i className=\"fa fa-arrow-left pr-2\"></i>Previous</button> : <div></div>}\r\n                    {movie_D.Search.length < 10 ? <div></div> : <button className=\"btn btn-outline-warning\" onClick={() => setPageCount(pageCount+1)}><i className=\"fa fa-arrow-right pr-2\"></i>Next</button>}\r\n                </div>\r\n            );\r\n        }\r\n        else if(movie_D.Response === \"False\") {\r\n            movies = (\r\n                <div className=\"dFlexColSpaced w-100 w-sm-50 h-50\">\r\n                    <img src={binocular} width=\"200\" height=\"100\" alt=\"not found image\" />\r\n                    <h2>Movie Not Found!</h2>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"container-fluid\" style={{paddingTop: \"20px\", minHeight: \"91.5vh\"}}>\r\n            <div className=\"row px-0 d-flex align-items-center justify-content-center\">\r\n                <div className=\"col-12 mb-1\">\r\n                    <span style={{font: \"1em Poppins, sans-serif\"}}>Search Results for {props.searchValue.replace(/-+/g, \" \")}</span>\r\n                </div>\r\n                <div className=\"col-12 d-flex justify-content-center\">\r\n                    <div className=\"movie-list-container\">\r\n                        {movieData !== null ? movies : <div></div>}\r\n                        {movieData !== null && movie_D.totalResults > 10 ? pageBtns : null}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MovieList;",{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":38,"column":25,"nodeType":"74","endLine":38,"endColumn":122},{"ruleId":"75","severity":1,"message":"76","line":61,"column":8,"nodeType":"77","endLine":61,"endColumn":23,"suggestions":"78"},{"ruleId":"75","severity":1,"message":"79","line":78,"column":8,"nodeType":"77","endLine":78,"endColumn":25,"suggestions":"80"},{"ruleId":"75","severity":1,"message":"81","line":94,"column":8,"nodeType":"77","endLine":94,"endColumn":33,"suggestions":"82"},{"ruleId":"83","severity":1,"message":"84","line":113,"column":25,"nodeType":"74","endLine":113,"endColumn":166},{"ruleId":"85","severity":1,"message":"86","line":244,"column":47,"nodeType":"74","endLine":244,"endColumn":309},{"ruleId":"75","severity":1,"message":"87","line":15,"column":5,"nodeType":"88","endLine":15,"endColumn":14,"suggestions":"89"},{"ruleId":"72","severity":1,"message":"73","line":45,"column":24,"nodeType":"74","endLine":45,"endColumn":102},{"ruleId":"72","severity":1,"message":"73","line":55,"column":29,"nodeType":"74","endLine":55,"endColumn":145},{"ruleId":"72","severity":1,"message":"73","line":84,"column":49,"nodeType":"74","endLine":84,"endColumn":119},{"ruleId":"72","severity":1,"message":"73","line":106,"column":45,"nodeType":"74","endLine":106,"endColumn":115},{"ruleId":"90","severity":1,"message":"91","line":1,"column":38,"nodeType":"88","messageId":"92","endLine":1,"endColumn":46},{"ruleId":"75","severity":1,"message":"93","line":13,"column":5,"nodeType":"88","endLine":13,"endColumn":14,"suggestions":"94"},{"ruleId":"90","severity":1,"message":"95","line":43,"column":9,"nodeType":"88","messageId":"92","endLine":43,"endColumn":14},{"ruleId":"83","severity":1,"message":"84","line":77,"column":21,"nodeType":"74","endLine":77,"endColumn":91},"no-native-reassign",["96"],"no-negated-in-lhs",["97"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'MovieList', 'bookmarkclick', 'movieArr', 'setMovieData', 'tMovie.Plot', 'tMovie.Poster', 'tMovie.Title', 'tMovie.imdbID', and 'thisMovie'. Either include them or remove the dependency array.","ArrayExpression",["98"],"React Hook useEffect has a missing dependency: 'movieArr'. Either include it or remove the dependency array.",["99"],"React Hook useEffect has a missing dependency: 'setMovieData'. Either include it or remove the dependency array.",["100"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","React Hook useEffect contains a call to 'setState'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.","Identifier",["101"],"no-unused-vars","'Suspense' is defined but never used.","unusedVar","React Hook useEffect contains a call to 'setPageCount'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [props.searchValue, pageCount] as a second argument to the useEffect Hook.",["102"],"'count' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"103","fix":"104"},{"desc":"105","fix":"106"},{"desc":"107","fix":"108"},{"desc":"109","fix":"110"},{"desc":"111","fix":"112"},"Update the dependencies array to be: [MovieList, bookmarkcheck, bookmarkclick, movieArr, setMovieData, tMovie.Plot, tMovie.Poster, tMovie.Title, tMovie.imdbID, thisMovie]",{"range":"113","text":"114"},"Update the dependencies array to be: [match.params.id, movieArr]",{"range":"115","text":"116"},"Update the dependencies array to be: [bookmarkclick, movieArr, setMovieData]",{"range":"117","text":"118"},"Add dependencies array: []",{"range":"119","text":"120"},"Add dependencies array: [props.searchValue, pageCount]",{"range":"121","text":"122"},[2297,2312],"[MovieList, bookmarkcheck, bookmarkclick, movieArr, setMovieData, tMovie.Plot, tMovie.Poster, tMovie.Title, tMovie.imdbID, thisMovie]",[2974,2991],"[match.params.id, movieArr]",[3532,3557],"[bookmarkclick, movieArr, setMovieData]",[737,737],", []",[1327,1327],", [props.searchValue, pageCount]"]